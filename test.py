import numpy as np
from convolution import Convolution
from max_pooling import MaxPooling


a = np.array([
    [
        [1, 2, 3, 4, 5, 6, 7],
        [2, 3, 4, 5, 6, 7, 7],
        [3, 4, 5, 6, 7, 8, 7],
        [4, 5, 6, 7, 8, 9, 7],
        [5, 6, 7, 8, 9, 10, 7],
        [6, 7, 8, 9, 10, 11, 7],
        [6, 7, 8, 9, 10, 11, 7]
    ],
    [
        [1, 2, 23, 4, 5, 6, 7],
        [2, 3, 4, 5, 6, 7, 7],
        [3, 4, 45, 6, 7, 8, 7],
        [4, 5, 6, 7, 86, 9, 7],
        [5, 6, 75, 8, 9, 10, 7],
        [62, 7, 8, 94, 10, 11, 7],
        [6, 7, 8, 9, 10, 11, 7]
    ],
    [
        [1, 2, 3, 4, 5, 6, 7],
        [2, 36, 4, 5, 6, 7, 7],
        [3, 46, 5, 6, 7, 8, 7],
        [4, 5, 68, 7, 8, 9, 7],
        [5, 6, 7, 88, 9, 10, 7],
        [6, 7, 8, 90, 10, 11, 7],
        [6, 7, 8, 9, 10, 11, 7]
    ],
    [
        [1, 2, 3, 4, 5, 6, 7],
        [2, 3, 42, 5, 6, 7, 7],
        [3, 4, 52, 6, 7, 8, 7],
        [4, 5, 36, 7, 18, 9, 7],
        [5, 6, 7, 8, 9, 10, 7],
        [6, 7, 8, 91, 10, 11, 7],
        [6, 7, 8, 9, 10, 11, 7]
    ]
])
co = Convolution(2, 4, 6, 1)
mp = MaxPooling(2)
print(mp.forward(co.forward(a)))
co.backward(mp.backward(mp.output))
co.update(3)
print(co.filter)
